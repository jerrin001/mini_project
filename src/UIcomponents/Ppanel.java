/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Ppanel.java
 *
 * Created on Oct 9, 2011, 7:11:52 AM
 */
package UIcomponents;
import dbconnect.*;
import java.util.Vector;
import java.sql.*;
import mini.*;
import javax.swing.*;
import java.util.Date;
/**
 *
 * @author user
 */
public class Ppanel extends javax.swing.JPanel {
    private static Vector<Vector<String>> data_hr;
    private static Vector<Vector<String>> data_phy;
    private static Vector<String> header_hr;
    private static Vector<String> header_phy;
    /** Creates new form Ppanel */
    public Ppanel() {
     //   phytable.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
     //   hrtable.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        data_hr = new Vector<Vector<String>>();
        data_phy = new Vector<Vector<String>>();
        try{
            DBquery d = new DBquery();
            ResultSet rs1 = d.generalQuery("SELECT DISTINCT res_name FROM phy_resource");
            while(rs1.next()){
                Vector<String> row1 = new Vector<String>();
                row1.add(rs1.getString(1));
                row1.add("0");
                data_phy.add(row1);
            
            }
            ResultSet rs2 = d.generalQuery("SELECT DISTINCT spec_name FROM specialisation");
            while(rs2.next()){
                Vector<String> row2 = new Vector<String>();
                row2.add(rs2.getString(1));
                row2.add("0");
                data_hr.add(row2);
            }
            header_phy = new Vector<String>();
            header_phy.add("Resource Types");
            header_phy.add("No. of instances reqd");
            header_hr = new Vector<String>();
            header_hr.add("Specialisations");
            header_hr.add("Number required");
        }catch(Exception e){
            System.out.println("exception caught in ppanel");
            e.printStackTrace();
        }
        
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextDuration = new javax.swing.JTextField();
        jTextRevenue = new javax.swing.JTextField();
        submitbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        phytable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int vColIndex){
                if(vColIndex == 1)
                return true;
                else
                return false;
            }
        };
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        hrtable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex,int vColIndex){
                if(vColIndex == 1){
                    return true;
                }
                else
                return false;
            }
        };
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();

        jLabel1.setFont(new java.awt.Font("Cooper Black", 0, 24));
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setText("Project   Details");

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 14));
        jLabel3.setForeground(new java.awt.Color(0, 51, 153));
        jLabel3.setText("Name");

        jTextName.setForeground(new java.awt.Color(0, 51, 153));

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 14));
        jLabel4.setForeground(new java.awt.Color(0, 51, 153));
        jLabel4.setText("Expected Revenue");

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 14));
        jLabel6.setForeground(new java.awt.Color(0, 51, 153));
        jLabel6.setText("Expected duration(in days)");

        jTextDuration.setForeground(new java.awt.Color(0, 51, 153));
        jTextDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextDurationActionPerformed(evt);
            }
        });

        submitbutton.setFont(new java.awt.Font("Cooper Black", 0, 14));
        submitbutton.setForeground(new java.awt.Color(0, 51, 153));
        submitbutton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UIcomponents/submitIcon.gif"))); // NOI18N
        submitbutton.setText("Submit");
        submitbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbuttonActionPerformed(evt);
            }
        });

        jScrollPane1.setToolTipText("Enter the no. of instances of each physical resource required.");

        phytable.setModel(new javax.swing.table.DefaultTableModel(data_phy,header_phy));
        jScrollPane1.setViewportView(phytable);

        jLabel2.setText("Physical Resource requirement :");

        jScrollPane2.setToolTipText("Enter the no.of employees required in each specialisation");

        hrtable.setModel(new javax.swing.table.DefaultTableModel(data_hr,header_hr));
        jScrollPane2.setViewportView(hrtable);

        jLabel7.setText("Human Resource Requirement :");

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 14));
        jLabel5.setForeground(new java.awt.Color(0, 51, 153));
        jLabel5.setText("Delivery Date");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jSpinner2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jSpinner3.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2000), Integer.valueOf(2000), null, Integer.valueOf(1)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addComponent(submitbutton))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(47, 47, 47))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextRevenue)
                                    .addComponent(jTextName, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addComponent(jTextDuration, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)))
                        .addGap(81, 81, 81))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(190, 190, 190)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextDuration, jTextName, jTextRevenue});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, jLabel4, jLabel5, jLabel6});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jTextRevenue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jTextDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinner3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(submitbutton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, jLabel4, jLabel5, jLabel6});

    }// </editor-fold>//GEN-END:initComponents

private void submitbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbuttonActionPerformed
try{    
    
    if(phytable.isEditing()){
        phytable.getCellEditor().stopCellEditing();
    }
    if(hrtable.isEditing()){
        hrtable.getCellEditor().stopCellEditing();
    }
  
    DBcreate update= new DBcreate();
    Project P;
    String employeeid;
    int projectid;
    SpinnerNumberModel model1 = (SpinnerNumberModel)jSpinner1.getModel();
    SpinnerNumberModel model2 = (SpinnerNumberModel)jSpinner2.getModel();
    SpinnerNumberModel model3 = (SpinnerNumberModel)jSpinner3.getModel();
    int dday = model1.getNumber().intValue();
    int dmonth = model2.getNumber().intValue();
    int dyear = model3.getNumber().intValue();
    String Pname = jTextName.getText();
    String d=jTextDuration.getText();
    int duration=0,revenue=0;
    if(d.length()!=0)
    {
         duration = Integer.parseInt(d);
    }
    String d1=jTextRevenue.getText();
    if(d1.length()!=0)
    {
         revenue=Integer.parseInt(d1);
    }
    String del_date=Create_date(dday,dmonth,dyear);
    int num_rows_hr,num_rows_phy;
    num_rows_hr=hrtable.getModel().getRowCount();
    num_rows_phy=phytable.getModel().getRowCount();
    if(Pname==null||Pname.length()==0||d==null||d.length()==0||d1==null||d1.length()==0)
    {
        
        JOptionPane.showMessageDialog(null,"Empty  fields not allowed..!!","Empty Field Error",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());
    }
    if(duration==0)
    {
         JOptionPane.showMessageDialog(null,"Duration cannot be Zero..!!","Project Duration Error",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());
    }
    if(revenue==0)
    {
         JOptionPane.showMessageDialog(null,"Revenue cannot be zero..!!","Revenue  Error",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());
    }
    
    if(num_rows_hr==0||num_rows_phy==0)
    {
         JOptionPane.showMessageDialog(null,"No resource added to the database","Resource database empty ",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());
    }
    String chk_del_date ="SELECT EXTRACT(DAY FROM SYSDATE) FROM DUAL";
    DBquery chk_date =new DBquery();
    ResultSet date_del_sys = chk_date.generalQuery(chk_del_date);
    date_del_sys.next();
    System.out.println("chk");
    int sys_day = date_del_sys.getInt(1);
    chk_del_date ="SELECT EXTRACT(MONTH FROM SYSDATE) FROM DUAL";
    ResultSet date_del_month_sys = chk_date.generalQuery(chk_del_date);
    date_del_month_sys.next();
    int sys_month=date_del_month_sys.getInt(1);
    chk_del_date ="SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL";
    ResultSet date_del_year_sys = chk_date.generalQuery(chk_del_date);
    date_del_year_sys.next();
    int sys_year=date_del_year_sys.getInt(1);
    
   
    if(dyear<sys_year)
    {
          System.out.println("chk");
        JOptionPane.showMessageDialog(null,"Delivery date cannot be less than current date..!!","Delivery date  Error",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());
    }
    else if(dmonth<sys_month && dyear<sys_year)
     {
                 System.out.println("chk");
        JOptionPane.showMessageDialog(null,"Delivery date cannot be less than current date..!!","Delivery date  Error",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());
                
     }
    else if(dday<sys_day && dmonth<sys_month && dyear<sys_year)
    {
      System.out.println("chk");
        JOptionPane.showMessageDialog(null,"Delivery date cannot be less than current date..!!","Delivery date  Error",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());   
    }
    int i=0,flag=0,flag_hr=0,flag_phy=0,flag_alloc=0,j=0;
    String phyres_name,temp,temp1;
    Object phyres_n,hrres_n;
    String hrres_name;
    int phyres_qty,hrres_qty;
    DBquery hr_phy =new DBquery();
    int phy_id;
    String query,query1;
    query="SELECT * FROM project WHERE status=1";
    ResultSet awaiting_pro = hr_phy.generalQuery(query);
    while(awaiting_pro.next())
    {  System.out.println("Not to be printed now 1");
        flag_alloc=1;
    }
    int main_flag_phy=0,main_flag_hr=0;
    while(i<num_rows_phy)
    {
   System.out.println(" to be printed now 1");
   phyres_n=phytable.getValueAt(i, 0);
   phyres_name= (String) phyres_n;
   phyres_n=phytable.getValueAt(i,1);
   temp = (String) phyres_n;
   System.out.println(temp);
   phyres_qty= Integer.parseInt(temp);
   if(phyres_qty==0)
   {
       main_flag_phy++;
   }
   System.out.println(phyres_qty);
   System.out.println(phyres_name);
   query="SELECT res_id FROM phy_resource WHERE res_name ="+"'"+phyres_name + "'";
   System.out.println(query);
   ResultSet phy_result = hr_phy.generalQuery("SELECT * FROM available_phy "); 
   ResultSet phyid =hr_phy.generalQuery(query);
   phyid.next();
   phy_id = phyid.getInt(1);
   System.out.println(phy_id);
   while(phy_result.next())
   {
       if(phy_result.getInt(1)==phy_id)
       {
           if(phy_result.getInt(2)<phyres_qty)
           {
               System.out.println("Not to be printed now 2");
               flag_phy=1;
           }
       }
   }
       
    i++;
  }
    i=0;
    int spec_id;
while(i<num_rows_hr)
{
    System.out.println(" to be printed now2 ");
 hrres_n=hrtable.getValueAt(i, 0);
 hrres_name =(String) hrres_n;
 hrres_n=hrtable.getValueAt(i, 1);
 temp1= (String) hrres_n;
 hrres_qty=Integer.parseInt(temp1);
 if(hrres_qty==0)
 {
     main_flag_hr++;
 }
 System.out.println(hrres_qty);
 System.out.println(hrres_name);
 query1="SELECT spec_id FROM specialisation WHERE spec_name=" + "'" + hrres_name +"'";
 System.out.println(query1);
 ResultSet hr_result = hr_phy.generalQuery("SELECT specid,avail_qty FROM hr_total_avail");
 ResultSet specid =hr_phy.generalQuery(query1);
 specid.next();
 spec_id=specid.getInt(1);
 System.out.println(spec_id);
 while(hr_result.next())
 {
     if(hr_result.getInt(1)==spec_id)
     {
         if(hr_result.getInt(2)<hrres_qty)
         {
          flag_hr=1;   
          System.out.println("Not to be printed now3");
         }
     }
 }
 i++;
}
if(main_flag_hr==num_rows_hr||main_flag_phy==num_rows_phy)
{
     JOptionPane.showMessageDialog(null,"Either Physical or Human resource Empty..!!","Empty Resource Project Error",
                    JOptionPane.WARNING_MESSAGE);
            throw(new Exception());
}
i=0;
String query2,query3,query4,query5;
DBinsert update_phy = new DBinsert();
DBinsert update_project = new DBinsert();
if(flag_hr==0 && flag_phy==0 && flag_alloc==0)
{
    System.out.println(" to be printed now 3");
       String project_add; 
       project_add="INSERT INTO project VALUES(pid_seq.nextval,'" + Pname +
               "',SYSDATE,SYSDATE +" + duration + ",0,'" + del_date + "',"
               + revenue + ",0)";
       update_project.generalInsert(project_add);
       
    while(i<num_rows_phy)
    {
        
        System.out.println(" to be printed now 4");
        phyres_n=phytable.getValueAt(i, 0);
        phyres_name= (String) phyres_n;
        phyres_n=phytable.getValueAt(i, 1);
        temp = (String) phyres_n;
        phyres_qty= Integer.parseInt(temp);
        System.out.println(phyres_qty);
        System.out.println(phyres_name);
        query2="SELECT res_id FROM phy_resource WHERE res_name ="+"'"+phyres_name + "'";
        System.out.println(query2);
        ResultSet phyid =hr_phy.generalQuery(query2);
        phyid.next();
        phy_id = phyid.getInt(1);
        System.out.println(phy_id);
        query3="INSERT INTO allocated_phy_resource VALUES(pid_seq.currval," + phy_id +"," + phyres_qty 
                + ")";
        System.out.println(query3);
        update_phy.generalInsert(query3);
        query3="UPDATE available_phy SET qty = qty -" + phyres_qty +" WHERE avail_resid=" + phy_id ;
        System.out.println(query3);
        update_phy.generalInsert(query3);
        i++;
    }
    i=0;
    while(i<num_rows_hr)
    {   
        j=0;
        System.out.println(" to be printed now 5");
        hrres_n=hrtable.getValueAt(i, 0);
        hrres_name =(String) hrres_n;
        hrres_n=hrtable.getValueAt(i, 1);
        temp1= (String) hrres_n;
        hrres_qty=Integer.parseInt(temp1);
        System.out.println(hrres_qty);
        System.out.println(hrres_name);
        query4="SELECT spec_id FROM specialisation WHERE spec_name=" + "'" + hrres_name +"'";
        System.out.println(query4);
        ResultSet specid =hr_phy.generalQuery(query4);
        specid.next();
        spec_id=specid.getInt(1);
        System.out.println(spec_id);
        query4="SELECT * FROM employee WHERE status=0 AND spec_id=" + spec_id ;
        System.out.println(query4);
        ResultSet emp = hr_phy.generalQuery(query4);
        while(j<hrres_qty)
        {   System.out.println(" to be printed now 6");
            emp.next();
            employeeid=emp.getString(1);
            query4="INSERT INTO allocated_employees VALUES(pid_seq.currval,'" + employeeid
                    +"')";
            System.out.println(query4);
            update_phy.generalInsert(query4);
            
            query4="UPDATE employee SET status=1 WHERE emp_id='" + employeeid + "'";
            System.out.println(query4);
            update_phy.generalInsert(query4);
            j++;
            
        }
        query5="UPDATE hr_total_avail SET avail_qty = avail_qty-" + hrres_qty + " WHERE specid =" + spec_id;
        System.out.println(query5);
        update_phy.generalInsert(query5);
        query5="INSERT INTO allocated_HR VALUES(pid_seq.currval," + spec_id + "," + hrres_qty + ")";
        System.out.println(query5);
        update_phy.generalInsert(query5);
        i++;
    }
}


}
catch(Exception ex)
{
    System.out.println("Exception at Ppanel sql :");
   
}
}//GEN-LAST:event_submitbuttonActionPerformed
private String Create_date(int day ,int month,int year)
{
     String [] mon={"JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"};
     String temp = day + "-" + mon[month-1] +"-" + year ;
        return temp;
}

private void jTextDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextDurationActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jTextDurationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable hrtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTextField jTextDuration;
    private javax.swing.JTextField jTextName;
    private javax.swing.JTextField jTextRevenue;
    private javax.swing.JTable phytable;
    private javax.swing.JButton submitbutton;
    // End of variables declaration//GEN-END:variables
}


class test4{
    public static void main(String args[]){
        javax.swing.JFrame f = new javax.swing.JFrame();
        Ppanel p = new Ppanel();
        p.setVisible(true);
        f.add(p);
        f.pack();
        f.show();
        
    }
}